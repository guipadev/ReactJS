{"version":3,"sources":["components/Formulario.jsx","hooks/useFormulario.js","components/Todo.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["Formulario","agregarTodo","initialSatate","useState","inputs","setInputs","e","target","name","value","checked","type","old","useFormulario","nombre","descripcion","estado","prioridad","handleChange","reset","onSubmit","preventDefault","trim","Swal","fire","title","text","icon","id","uuidv4","focus","className","placeholder","onChange","htmlFor","Todo","todo","eliminarTodo","editarTodo","onClick","TodoList","todos","setTodos","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","filter","item","editarTodos","map","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba34b2e3.chunk.js","sourcesContent":["import Swal from 'sweetalert2'\nimport { v4 as uuidv4 } from \"uuid\"\nimport { useFormulario } from \"../hooks/useFormulario\"\n\nconst Formulario = ({agregarTodo}) => {\n\n    //Estados inicializados, los nombre concordar con los colocados en el form\n    const initialState = {\n        nombre: \"\",\n        descripcion: \"\",\n        estado: \"pendiente\",\n        prioridad: false,\n    }\n\n    //Uso Hoocks \n    const [inputs, handleChange, reset] = useFormulario(initialState)\n\n    //Destructuracion\n    const { nombre, descripcion, estado, prioridad } = inputs;\n\n    //Activar el formulario\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(!nombre.trim()) {\n            e.target[0].focus(); //Capturar en que espacion quedo digitación\n            Swal.fire({\n                title: 'Error!',\n                text: 'No puede dejar nombre en blanco',\n                icon: 'error',\n              });\n              return;\n        }\n          \n        if(!descripcion.trim()) {\n            e.target[1].focus(); //Capturar en que espacion quedo digitación\n            Swal.fire({\n                title: 'Error!',\n                text: 'No puede dejar la descripción en blanco',\n                icon: 'error',\n              });\n              return;\n        }\n\n        Swal.fire({\n            title: 'Éxito!',\n            text: 'Tarea agregada',\n            icon: 'success',\n        });\n\n        agregarTodo({\n            nombre: nombre,\n            descripcion: descripcion,\n            estado: estado === \"pendiente\" ? false : true,\n            prioridad: prioridad,\n            id: uuidv4() //React siempre necesita un id unico para renderizar\n        });\n\n        reset();\n\n        //console.log(todo);\n    }\n\n   \n\n    return (\n        <>\n            <h3>Agregar TODO</h3>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    className=\"form-control mb-2\"\n                    name=\"nombre\"\n                    placeholder=\"ingrese todo nombre\"\n                    value={nombre}\n                    onChange={handleChange}\n                />\n                <textarea \n                    className=\"form-control mb-2\"\n                    name=\"descripcion\"\n                    placeholder=\"ingrese descripcion\"\n                    value={descripcion}\n                    onChange={handleChange}\n                />\n                <select \n                    name=\"estado\" \n                    className=\"form-control mb-2\"\n                    value={estado}\n                    onChange={handleChange}\n                >\n                    <option value=\"pendiente\">pendiente</option>\n                    <option value=\"completado\">completado</option>\n                </select>\n                <div className=\"form-check\">\n                    <input \n                        id=\"flexCheckDefault\" \n                        className=\"form-check-input\" \n                        type=\"checkbox\" \n                        name=\"prioridad\"\n                        checked={prioridad} \n                        onChange={handleChange}\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                      Prioritario\n                    </label>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                    Agregar\n                </button>\n            </form>\n        </ >\n    )\n}\n\nexport default Formulario","import { useState } from \"react\";\n\nexport const useFormulario = (initialSatate = {}) => {\n\n    const [inputs, setInputs] = useState(initialSatate)\n\n     //Relacion del input con su propiedad correspondiente\n     const handleChange = (e) => {\n        //Destructuramos\n        const { name, value, checked, type } = e.target;\n\n        //Mantener los valores de las propiedades\n        setInputs((old) => ({\n            ...old,\n            [name]: type === \"checkbox\" ? checked : value,\n        }));\n    }\n\n    //Reiniciar a estado original\n    const reset = () => {\n        setInputs(initialSatate)\n    }\n\n    return [inputs, handleChange, reset]\n}","const Todo = ({ todo, eliminarTodo, editarTodo }) => {\n\n    const {id, nombre, descripcion, estado, prioridad} = todo\n\n    return (\n        <li className=\"list-group-item d-flex justify-content-between align-items-start\">\n            <div className=\"ms-2 me-auto\">\n                <div className=\"fw-bold\">\n                    {nombre} ( {estado ? 'Finalizado' : 'Pendiente'} )\n                </div>\n                <p>{descripcion}</p>\n                <div>\n                    <button \n                        className=\"btn btn-danger me-2\" \n                        onClick={() => eliminarTodo(id)}\n                    >\n                        Eliminar\n                    </button>\n                    <button \n                        className=\"btn btn-warning\"\n                        onClick={() => editarTodo(id)}\n                    >\n                            Editar\n                    </button>\n                </div>\n            </div>\n            <span className=\"badge bg-primary rounded-pill\">\n                {prioridad && \"Prioritario\"}\n            </span>\n        </li>\n    );\n}\n\nexport default Todo;","import { useEffect, useState } from \"react\"\nimport Formulario from \"./Formulario\"\nimport Todo from \"./Todo\";\n\nconst TodoList = () => {\n\n    const [todos, setTodos] = useState([]); //Estado donde estaran todos los objetos\n\n    //Los [] vacios para que solo se renderice una vez y trae los datos LocalStorage almacenados\n    useEffect(() => {\n        if (localStorage.getItem(\"todos\")){\n            setTodos(JSON.parse(localStorage.getItem(\"todos\")));\n        }\n    }, []);\n\n    //Cada vez que se guardo o modificar un elemento Guardar datos localstorage\n    useEffect(() => {\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }, [todos]);\n\n\n    const agregarTodo = (todo) => {\n        console.log(todo)\n        setTodos((old) => [...old, todo]); //capturar todos los objetos\n    };\n\n    const eliminarTodo = (id) => {\n        setTodos((old) => old.filter(item => item.id !== id))\n    }\n\n    const editarTodo = (id) => {\n        \n        const editarTodos = todos.map(item => (\n            item.id === id ? {...item, estado: !item.estado} : item\n        ))\n\n        setTodos(editarTodos)\n    }\n\n    return (\n        <>\n            <Formulario agregarTodo={agregarTodo} />\n            <ul className=\"list-group list-group-numbered mt-2\">\n                {\n                    todos.map((item) => (\n                        <\n                            Todo key={item.id} \n                            todo={item} \n                            eliminarTodo={eliminarTodo} \n                            editarTodo={editarTodo}\n                        />\n                    ))\n                }\n            </ul>\n        </>\n    )\n}\n\nexport default TodoList","import TodoList from \"./components/TodoList\"\n\nconst App = () => {\n    return (\n        <div className=\"container\">\n            <h1>App</h1>\n            <TodoList />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}